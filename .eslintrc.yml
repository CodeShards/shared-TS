root: true
parser: "@typescript-eslint/parser"
parserOptions:
  project: "./tsconfig.eslint.json"
plugins:
  - "@typescript-eslint"
  - jest
extends:
  - eslint:all
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:jest/all
rules:
  no-sync: off
  newline-per-chained-call: off
  jest/no-hooks: warn
  "@typescript-eslint/return-await": error
  "@typescript-eslint/no-useless-constructor": error
  "@typescript-eslint/no-inferrable-types": warn
  no-useless-constructor: off
  "@typescript-eslint/no-unused-expressions": warn
  "@typescript-eslint/default-param-last": error
  func-call-spacing: off
  "@typescript-eslint/unified-signatures": error
  default-param-last: off
  brace-style: off
  "@typescript-eslint/require-await": error
  "@typescript-eslint/strict-boolean-expressions":
    - warn
    - allowNullable: true
      allowSafe: true
      ignoreRhs: true
  "@typescript-eslint/restrict-template-expressions":
    - error
    - allowNumber: true
  require-await: off
  "@typescript-eslint/restrict-plus-operands":
    - error
    - checkCompoundAssignments: true
  "@typescript-eslint/require-array-sort-compare": error
  "@typescript-eslint/promise-function-async": error
  "@typescript-eslint/prefer-optional-chain": error
  "@typescript-eslint/prefer-nullish-coalescing":
    - warn
    - forceSuggestionFixer: true
  "@typescript-eslint/prefer-readonly": error
  "@typescript-eslint/prefer-function-type": warn
  "@typescript-eslint/prefer-for-of": warn
  "@typescript-eslint/no-unnecessary-type-arguments": warn
  prefer-const: warn
  "@typescript-eslint/no-unnecessary-qualifier": error
  "@typescript-eslint/no-unnecessary-condition":
    - warn
    - ignoreRhs: true
  no-constant-condition: off
  space-infix-ops: off
  "@typescript-eslint/no-throw-literal": error
  "@typescript-eslint/no-require-imports": error
  "@typescript-eslint/no-non-null-asserted-optional-chain": error
  "@typescript-eslint/no-implied-eval": error
  "@typescript-eslint/no-floating-promises":
    - error
    - ignoreVoid: true
  no-implicit-coercion:
    - error
    - allow:
        - "!!"
  no-extra-boolean-cast: off
  "@typescript-eslint/no-extraneous-class": warn
  "@typescript-eslint/no-extra-non-null-assertion": error
  "@typescript-eslint/no-dynamic-delete": 1
  "@typescript-eslint/naming-convention":
    - warn
    - selector: variable
      types:
        - boolean
      format:
        - PascalCase
      prefix:
        - is
        - should
        - has
        - can
        - did
        - will
    - selector: variable
      types:
        - function
      format:
        - PascalCase
        - camelCase
    - selector: enumMember
      format:
        - UPPER_CASE
    - selector: function
      format:
        - camelCase
        - PascalCase
    - selector: default
      format:
        - camelCase
        - PascalCase
        - UPPER_CASE
    - selector: variable
      format:
        - camelCase
        - UPPER_CASE
        - PascalCase
    - selector: parameter
      format:
        - camelCase
      leadingUnderscore: allow
    - selector: memberLike
      modifiers:
        - private
      format:
        - camelCase
      leadingUnderscore: require
    - selector: typeLike
      format:
        - PascalCase
  "@typescript-eslint/explicit-member-accessibility": 0
  "@typescript-eslint/consistent-type-definitions": 1
  "@typescript-eslint/array-type":
    - warn
    - default: array-simple
  "@typescript-eslint/explicit-function-return-type": 0
  "@typescript-eslint/member-delimiter-style": off
  "@typescript-eslint/no-unused-vars": off
  "@typescript-eslint/no-use-before-define": off
  "@typescript-eslint/no-empty-function":
    - warn
    - allow:
        - protected-constructors
        - private-constructors
  no-console: off
  no-warning-comments: off
  padded-blocks: off
  arrow-parens: off
  linebreak-style: off
  function-paren-newline: off
  no-confusing-arrow: off
  space-before-function-paren: off
  class-methods-use-this: off
  lines-around-comment: off
  object-property-newline: off
  no-tabs: off
  no-unused-vars: off
  func-style: off
  sort-imports: off
  dot-location: off
  object-curly-spacing: off
  implicit-arrow-linebreak: off
  spaced-comment: off
  no-magic-numbers: off
  no-multi-spaces: off
  no-extra-parens: off
  no-extra-semi: off
  key-spacing: off
  indent: off
  no-process-env: off
  sort-keys: off
  sort-vars: off
  curly: off
  new-parens: off
  no-undefined: off
  no-ternary: off
  eol-last: off
  no-trailing-spaces: off
  no-multiple-empty-lines: off
  multiline-comment-style: off
  no-nested-ternary: off
  capitalized-comments: off
  template-curly-spacing: off
  lines-between-class-members: off
  max-classes-per-file: off
  no-useless-rename: off
  space-in-parens: off
  space-before-blocks: off
  callback-return: off
  quote-props: off
  nonblock-statement-body-position: off
  init-declarations: off
  quotes: off
  one-var: off
  semi: off
  array-element-newline: off
  object-shorthand: off
  comma-dangle: off
  no-unused-expressions: off
  function-call-argument-newline: off
  no-await-in-loop: warn
  no-import-assign: warn
  require-atomic-updates: warn
  max-len:
    - warn
    - code: 150
      tabWidth: 2
      ignorePattern: "^import"
      ignoreUrls: true
  id-length:
    - warn
    - exceptions:
        - x
        - _
        - e
        - i
        - R
  max-params:
    - warn
    - max: 5
  arrow-body-style: warn
  line-comment-position: warn
  no-inline-comments: warn
  operator-linebreak: warn
  multiline-ternary:
    - warn
    - always-multiline
  new-cap:
    - warn
    - capIsNew: false
  no-mixed-spaces-and-tabs:
    - warn
    - smart-tabs
  no-return-await: off
  no-underscore-dangle: off
  max-statements:
    - warn
    - max: 20
  no-else-return: warn
  max-lines-per-function: off
  no-plusplus: warn
  prefer-template: warn
  func-names:
    - warn
    - as-needed
  no-shadow:
    - warn
    - builtinGlobals: true
overrides:
  - files:
      - "*.d.ts"
    rules:
      "@typescript-eslint/no-unused-vars": off
  - files:
      - "*.spec.ts"
    rules:
      init-declarations: off
      "@typescript-eslint/require-await": off
env:
  jest/globals: true
